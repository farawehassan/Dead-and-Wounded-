package application;
	
import java.io.IOException;
import java.util.Random;
import javax.swing.JOptionPane;
import javafx.application.Application;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.layout.AnchorPane;
import javafx.fxml.FXMLLoader;

public class Main extends Application {
		
	int [] A_of_rand_num = new int[4];  //number generated by computer 		
    int []guess = new int[4];			//number guessed by player when computer generates its number
    
    int [] player1_num = new int[4];	//number generated by player 1
	int [] player2_num = new int[4];  	//number generated by player 2
	
	int [] player1_guess = new int[4];	//number guessed by player 1 when player 2 generates its number	
	int [] player2_guess = new int[4];	//number guessed by player 2 when player  generates its number
	
    String guess_str;
    String  player1_num_str;
	String  player2_num_str;
	String player1_guess_str;
	String player2_guess_str;
    
	int dead_P1 = 0;
	int dead_P2 = 0;
	int wounded_P1 = 0;
	int wounded_P2 = 0;
	
	@Override
	public void start(Stage primaryStage) {
		
		try {
			AnchorPane root = (AnchorPane)FXMLLoader.load(getClass().getResource("Sample.fxml"));
			Scene scene = new Scene(root,644,400);
			scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
			primaryStage.setScene(scene);
			primaryStage.setTitle("DEAD AND WOUNDED");	//Set the stage title
			primaryStage.show();
		} catch (IOException e) {
			e.printStackTrace();
		}
					
	}
	
	public void gen_num(){
        Random rand =new Random();
        int rand_num = rand.nextInt(9);
        for(int i=0; i<A_of_rand_num.length; i++){
        	rand_num = rand.nextInt(9);
            while(rand_num ==  A_of_rand_num[0] || rand_num ==  A_of_rand_num[1] || rand_num ==  A_of_rand_num[2] || rand_num ==  A_of_rand_num[3]){ 
            	rand_num = rand.nextInt(9);
            }
            A_of_rand_num[i] = rand_num;
        }
                
    }
	
	public void make_guess(){
	       
        int killed = 0;
        int wounded = 0;
        
        while( killed < guess.length){
        	guess_str = JOptionPane.showInputDialog("Enter your guess");
        	
            for(int i= 0; i< guess.length; i++){
            	guess[i]=guess_str.charAt(i) - '0';
            }
             
            for(int i= 0; i< guess.length; i++){
            	if(guess[i] == A_of_rand_num[i]){
            		JOptionPane.showMessageDialog(null , guess[i] +  " is dead");
   
            		killed++;
            	}
            
            	for(int j=0; j<guess.length; j++){
            		if(guess[i] == A_of_rand_num[j] && guess[i] != A_of_rand_num[i]){
            			JOptionPane.showMessageDialog(null , guess[i] +  " is wounded");
            		
            			wounded++;
            		} 
            	}
            }
            
            JOptionPane.showMessageDialog(null ,killed + " was dead and " + wounded + " was wounded");
        
            if(killed == guess.length ){
            	JOptionPane.showMessageDialog(null , "YOU WON");
            	break;
            }
            else{
            	killed = 0;
            	wounded = 0;
            }
        }
	}
	
	public void run(){
	   //Implementing thread to sleep for 5 seconds in order to run any background process
	   for(int i=0;i<=4;i++){
			   
		   try {
			   Thread.sleep(500);
	       } catch (InterruptedException ex) {
	           ex.getMessage();
	          }
		   
	   }
	}
	
	/**Code started here for multi-players */ 
	
	//Method for Player 1 inputting its number
	public void Player1(){
		player1_num_str = JOptionPane.showInputDialog("Player 1 Numbers"); 
	       
		//Converting the numbers received as String to Integer
	    for(int i=0; i<player1_guess.length; i++){
	        player1_num[i] = player1_num_str.charAt(i) - '0';
	    }
	}
	   
		
	//Method for Player 1 inputting its guess for Player 2's number
	public void Player1_guess(){
		player1_guess_str = JOptionPane.showInputDialog("Player 1 Guesses");
	     
		//Converting the numbers received as String to Integer
		for(int i=0; i<player1_guess.length; i++){
			player1_guess[i] = player1_guess_str.charAt(i) - '0';
	    }
	      
		for(int i=0; i<player1_guess.length; i++){
				
			if( player1_guess[i] ==  player2_num[i]){
				JOptionPane.showMessageDialog(null , player1_guess[i] +  " is dead");
	                
				dead_P1++;    
			}
				
			for(int j=0; j<player1_guess.length; j++){
					
				if( player1_guess[i] ==  player2_num[j] &&  player1_guess[i] !=  player2_num[i]){
					JOptionPane.showMessageDialog(null ,  player1_guess[i] +  " is wounded");
						
					wounded_P1++;
	            }
					
			}
				
		}
			
		JOptionPane.showMessageDialog(null , dead_P1 + " is dead and " + wounded_P1+ " is wounded");
	}
		
		
	//Method for Player 2 inputting its number
	public void Player2(){
		player2_num_str = JOptionPane.showInputDialog("Player 2 Numbers"); 
	      
		//Converting the numbers received as String to Integer
		for(int i=0; i<player2_guess.length; i++){
			player2_num[i] =    player2_num_str.charAt(i) - '0';
		}
	}
		
	   
	//Method for Player 2 inputting its guess for Player 1's number
	public void Player2_guess(){
		player2_guess_str = JOptionPane.showInputDialog("Player 2 Guesses"); 
	      
		//Converting the numbers received as String to Integer
		for(int i=0; i<player2_guess.length; i++){
			player2_guess[i] = player2_guess_str.charAt(i) - '0';
		}
	      
		for(int i=0; i<player2_guess.length; i++){
			if( player2_guess[i] ==  player1_num[i]){
				JOptionPane.showMessageDialog(null , player2_guess[i] +  " is dead");
	                
				dead_P2++;    
			}
			for(int j=0; j<player2_guess.length; j++){
	           
				if( player2_guess[i] ==  player1_num[j] &&  player2_guess[i] !=  player1_num[i]){
					JOptionPane.showMessageDialog(null ,  player2_guess[i] +  " is wounded");
					wounded_P2++;
	       		} 
	        	   
			}
	           
		}
	       
		JOptionPane.showMessageDialog(null ,dead_P2 + " is dead and " + wounded_P2+ " is wounded");
	}
	   
	    
	public void startGame(){   
	    	
	   	while(dead_P1 != 4|| dead_P2 != 4){
	    		
	   		dead_P1 = 0;
	   		dead_P2 = 0;
	   		wounded_P1 = 0;
	   		wounded_P2 = 0;
	    		
	   		Player1();		//Calling player 1 to input its number
	   		run();			//Calling the thread
	    		
	   		Player2_guess(); //Calling player 2 to guess player 1's number
	    		
	   		if(dead_P2 == player2_num.length ){
	   			JOptionPane.showMessageDialog(null, "PLAYER 2 HAS WON");
	   			break;
	        }
	    		                	
	   		Player2(); 		//Calling player 2 to input its number
	   		run();			//Calling the thread
	    		
	   		Player1_guess(); //Calling player 1 to guess player 2's number    	        
	       
	   		if(dead_P1 == player1_num.length){
	   			JOptionPane.showMessageDialog(null, "PLAYER 1 HAS WON");
	   			break;
	   		}
	    		        
	   	}  
	     
	}
   
    public static void main(String[] args) {
		launch(args);
	}
}

